{
  "openapi": "3.0.1",
  "info": {
    "title": "NABARUN API",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "http://localhost:8082",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    }
  ],
  "paths": {
    "/api/user/{id}/update": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user details by admin",
        "description": "Authorities : hasAuthority('SCOPE_update:user')",
        "operationId": "updateUserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseUserDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/user/roles/{id}/assignUsersToRole": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Assign users to specific role",
        "description": "Authorities : hasAuthority('SCOPE_update:user_role')",
        "operationId": "assignUsersToRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MEMBER",
                "CASHIER",
                "ASSISTANT_CASHIER",
                "TREASURER",
                "GROUP_COORDINATOR",
                "ASST_GROUP_COORDINATOR",
                "SECRETARY",
                "ASST_SECRETARY",
                "COMMUNITY_MANAGER",
                "ASST_COMMUNITY_MANAGER",
                "PRESIDENT",
                "VICE_PRESIDENT",
                "TECHNICAL_SPECIALIST"
              ]
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserDetail"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/socialevent/createEvent": {
      "post": {
        "tags": [
          "event-controller"
        ],
        "operationId": "createSocialEvent",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseEventDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/request/create": {
      "post": {
        "tags": [
          "request-controller"
        ],
        "summary": "Create a new request",
        "description": "Authorities : hasAuthority('SCOPE_create:request')",
        "operationId": "createRequest",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseRequestDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/notice/create": {
      "post": {
        "tags": [
          "notice-controller"
        ],
        "summary": "Create a new notice",
        "description": "Authorities : hasAuthority('SCOPE_create:notice')",
        "operationId": "createNotice",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseNoticeDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/donation/{id}/payment": {
      "post": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Initiate payment for a donation",
        "operationId": "payments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/create": {
      "post": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Create new donation",
        "description": "Authorities : hasAuthority('SCOPE_create:donation')",
        "operationId": "raiseDonation",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/notification/manage": {
      "post": {
        "tags": [
          "common-controller"
        ],
        "summary": "Manage notification for logged in user",
        "operationId": "manageNotification",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/jobs/trigger": {
      "post": {
        "tags": [
          "common-controller"
        ],
        "summary": "Triggers a job from external systems",
        "operationId": "jobsTrigger",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDetail"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/document/uploadbase64": {
      "post": {
        "tags": [
          "common-controller"
        ],
        "summary": "Upload document as base64",
        "operationId": "uploadDocuments",
        "parameters": [
          {
            "name": "docIndexId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "docIndexType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DONATION",
                "EVENT",
                "NOTICE",
                "USER",
                "PROFILE_PHOTO",
                "EVENT_COVER",
                "REQUEST",
                "EXPENSE"
              ]
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentDetailUpload"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/document/upload": {
      "post": {
        "tags": [
          "common-controller"
        ],
        "summary": "Upload document",
        "operationId": "uploadDocuments_1",
        "parameters": [
          {
            "name": "docIndexId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "docIndexType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DONATION",
                "EVENT",
                "NOTICE",
                "USER",
                "PROFILE_PHOTO",
                "EVENT_COVER",
                "REQUEST",
                "EXPENSE"
              ]
            }
          },
          {
            "name": "files",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/admin/service/run": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Runs a admin service.",
        "description": "Authorities : hasAuthority('SCOPE_create:servicerun')\u003Cbr\u003E\u003Cbr\u003E\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003ETrigger Name\u003C/th\u003E\u003Cth\u003EParameters\u003C/th\u003E\u003C/tr\u003E\u003C/thead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003ESYNC_USER\u003C/td\u003E\u003Ctd\u003Esync_role - Y/N (Sync roles with auth0)\u003Cbr\u003Euser_id - &lt;user id &gt; (Sync specific user by id)\u003Cbr\u003Euser_email - &lt;user email&gt; (Sync specific user by email)\u003C/td\u003E\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E",
        "operationId": "runService",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/admin/clearcache": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Clears System cache",
        "operationId": "clearCache",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/admin/apikey/{id}/update": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Update existing apikey",
        "description": "Authorities : hasAuthority('SCOPE_update:apikey')",
        "operationId": "updateApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revoke",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseApiKeyDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/admin/apikey/generate": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Create new apikey",
        "description": "Authorities : hasAuthority('SCOPE_create:apikey')",
        "operationId": "generateApiKey",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseApiKeyDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/transaction/create": {
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "Create new transaction",
        "description": "Authorities : hasAuthority('SCOPE_create:transaction')",
        "operationId": "createTransaction",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseTransactionDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/expense/create": {
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "Create new expense",
        "description": "Authorities : hasAuthority('SCOPE_create:expense')\u003Cbr\u003E\u003Cbr\u003ENote: If expense item is supplied then create expense item",
        "operationId": "createExpense",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseExpenseDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/create": {
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "Create new account",
        "description": "Authorities : hasAuthority('SCOPE_create:account')",
        "operationId": "createAccount",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseAccountDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/user/update/self": {
      "patch": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user details by user",
        "operationId": "updateLoggedInUserDetails",
        "parameters": [
          {
            "name": "updatePicture",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseUserDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/socialevent/updateEvent/{id}": {
      "patch": {
        "tags": [
          "event-controller"
        ],
        "operationId": "updateSocialEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseEventDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/request/{id}/update": {
      "patch": {
        "tags": [
          "request-controller"
        ],
        "summary": "Update an existing requests",
        "description": "Authorities : hasAuthority('SCOPE_update:request')",
        "operationId": "updateRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseRequestDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/request/workitem/{id}/update": {
      "patch": {
        "tags": [
          "request-controller"
        ],
        "summary": "Update an existing workitem",
        "description": "Authorities : hasAuthority('SCOPE_update:work')",
        "operationId": "updateWorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseWorkDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/notice/{id}/update": {
      "patch": {
        "tags": [
          "notice-controller"
        ],
        "summary": "Update a specific notice",
        "description": "Authorities : hasAuthority('SCOPE_update:notice')",
        "operationId": "updateNotice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseNoticeDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/donation/{id}/update": {
      "patch": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Update a donation details",
        "description": "Authorities : hasAuthority('SCOPE_update:donation')",
        "operationId": "updateDonation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/account/{id}/update": {
      "patch": {
        "tags": [
          "account-controller"
        ],
        "summary": "Update account details",
        "description": "Authorities : hasAuthority('SCOPE_update:account')",
        "operationId": "updateAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseAccountDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/{id}/update/self": {
      "patch": {
        "tags": [
          "account-controller"
        ],
        "summary": "Update account details of logged in user",
        "operationId": "updateMyAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseAccountDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/expense/{id}/update": {
      "patch": {
        "tags": [
          "account-controller"
        ],
        "summary": "Update details of expense",
        "description": "Authorities : hasAuthority('SCOPE_update:expense')\u003Cbr\u003E\u003Cbr\u003ENote: If new expense item is supplied (without id) then create expense item,If existing expense item is supplied (with id) then update expense item,Set remove attribute true in case expense item needs to be removed",
        "operationId": "updateExpense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseExpenseDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/expense/{id}/finalize": {
      "patch": {
        "tags": [
          "account-controller"
        ],
        "summary": "Finalize expense",
        "description": "Authorities : hasAuthority('SCOPE_create:expense_final')",
        "operationId": "finalizeExpense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseItemDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseExpenseItemDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/test/getLatestTestOtp": {
      "get": {
        "tags": [
          "test-controller"
        ],
        "operationId": "getLatestTestOtp",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieve user details by user id",
        "description": "Authorities : hasAuthority('SCOPE_read:user')",
        "operationId": "getUserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ID",
              "enum": [
                "EMAIL",
                "AUTH_USER_ID",
                "ID"
              ]
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseUserDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/user/self": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieve logged in user details",
        "operationId": "getLoggedInUserDetails",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseUserDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/user/list": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieve list of users",
        "description": "Authorities : hasAnyAuthority('SCOPE_read:users','ROLE_API_USER')",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateUserDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/socialevent/getEvents": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "operationId": "getSocialEvents",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateEventDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/socialevent/getEventDocuments/{id}": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "operationId": "getSocialEventDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListDocumentDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/socialevent/getEvent/{id}": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "operationId": "getSocialEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseEventDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/socialevent/getDraftedEvent": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "operationId": "getDraftedEvent",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseEventDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/request/{id}": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Retrieves details of a specific request",
        "description": "Authorities : hasAuthority('SCOPE_read:request')",
        "operationId": "getRequestDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseRequestDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/request/{id}/workitems": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Retrieves list of workitems against a specific request",
        "description": "Authorities : hasAuthority('SCOPE_read:work')",
        "operationId": "getWorkItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListWorkDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/request/workitem/list/self": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Retrieve list of workitems for logged in user",
        "operationId": "getMyWorkItems",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/WorkDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateWorkDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/request/list/self": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Retrieve list of requests of logged in user",
        "operationId": "getMyRequests",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateRequestDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/notice/{id}": {
      "get": {
        "tags": [
          "notice-controller"
        ],
        "summary": "Retrieve details of a specific notice",
        "description": "Authorities : hasAuthority('SCOPE_read:notice')",
        "operationId": "getNotice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseNoticeDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/notice/list": {
      "get": {
        "tags": [
          "notice-controller"
        ],
        "summary": "Retrieve notice list",
        "description": "Authorities : hasAuthority('SCOPE_read:notices')",
        "operationId": "getAllNotice",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NoticeDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateNoticeDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/notice/getDraftedNotice": {
      "get": {
        "tags": [
          "notice-controller"
        ],
        "operationId": "getDraftedNotice",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseNoticeDetail"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/donation/{id}/documents": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Retrieve list of documents for a donation",
        "description": "Authorities : hasAuthority('SCOPE_read:donation_documents')",
        "operationId": "getDonationDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListDocumentDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/{id}/changes": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Retrieve list of changes for a donation",
        "description": "Authorities : hasAuthority('SCOPE_read:donation_history')",
        "operationId": "getHistories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListHistoryDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/{donorId}/summary": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Calculates the donation summary",
        "operationId": "getDonationSummary",
        "parameters": [
          {
            "name": "donorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includePayableAccount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeOutstandingMonths",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseDonationSummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/{donorId}/list": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Retrieve list of donations for a member",
        "description": "Authorities : hasAuthority('SCOPE_read:user_donations')",
        "operationId": "getUserDonations",
        "parameters": [
          {
            "name": "donorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DonationDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/self/list": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Retrieve list of donations of a logged in user",
        "operationId": "getLoggedInUserDonations",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DonationDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/list": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Retrieve list of donations",
        "description": "Authorities : hasAuthority('SCOPE_read:donations')",
        "operationId": "getDonations",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DonationDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/donation/guest/list": {
      "get": {
        "tags": [
          "donation-controller"
        ],
        "summary": "Retrieve list of donations for guests",
        "description": "Authorities : hasAnyAuthority('SCOPE_read:donation_guest','ROLE_API_USER')",
        "operationId": "getGuestDonations",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DonationDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateDonationDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/notification/list": {
      "get": {
        "tags": [
          "common-controller"
        ],
        "summary": "Retrieve notifications for logged in user",
        "operationId": "getNotification",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateMapStringString"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/document/{id}/view": {
      "get": {
        "tags": [
          "common-controller"
        ],
        "summary": "View a document",
        "operationId": "viewDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseDocumentDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/document/{id}/download": {
      "get": {
        "tags": [
          "common-controller"
        ],
        "summary": "Download a document",
        "operationId": "downloadDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/document/{docIndexType}/{docIndexId}/list": {
      "get": {
        "tags": [
          "common-controller"
        ],
        "summary": "Retrieve list of documents against docIndexType and docIndexId",
        "operationId": "getDocuments",
        "parameters": [
          {
            "name": "docIndexId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "docIndexType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DONATION",
                "EVENT",
                "NOTICE",
                "USER",
                "PROFILE_PHOTO",
                "EVENT_COVER",
                "REQUEST",
                "EXPENSE"
              ]
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListDocumentDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/data/referenceFields": {
      "get": {
        "tags": [
          "common-controller"
        ],
        "summary": "Retrieve reference field against source",
        "operationId": "getReferenceField",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListAdditionalField"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/common/data/referenceData": {
      "get": {
        "tags": [
          "common-controller"
        ],
        "summary": "Retrieve reference data with filter",
        "operationId": "getReferenceData",
        "parameters": [
          {
            "name": "names",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RefDataType"
              }
            }
          },
          {
            "name": "donationType",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DonationType"
            }
          },
          {
            "name": "currentDonationStatus",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DonationStatus"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stateCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/RequestType"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMapStringListKeyValue"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    },
    "/api/admin/apikey/list": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Retrieve list of apikeys",
        "description": "Authorities : hasAuthority('SCOPE_read:apikey')",
        "operationId": "getApiKeyList",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseListApiKeyDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/metrics": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'metrics'",
        "operationId": "metrics",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/metrics/{requiredMetricName}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'metrics-requiredMetricName'",
        "operationId": "metrics-requiredMetricName",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requiredMetricName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/mappings": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'mappings'",
        "operationId": "mappings",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health'",
        "operationId": "health",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/health/**": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health-path'",
        "operationId": "health-path",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/env": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'env'",
        "operationId": "env",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/actuator/env/{toMatch}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'env-toMatch'",
        "operationId": "env-toMatch",
        "parameters": [
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toMatch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth_apikey": [],
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/{id}/transaction/self/list": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieve list of transaction for a logged in user account",
        "operationId": "getMyTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateTransactionDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/{id}/transaction/list": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieve list of transaction for an account",
        "description": "Authorities : hasAuthority('SCOPE_read:transactions')",
        "operationId": "getTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateTransactionDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/self/list": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieves list of accounts of the logged in user",
        "operationId": "getMyAccounts",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateAccountDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/list": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieves list of accounts",
        "description": "Authorities : hasAuthority('SCOPE_read:accounts')",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateAccountDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/account/expense/list": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieve list of expenses",
        "description": "Authorities : hasAuthority('SCOPE_read:expenses')",
        "operationId": "getExpenses",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ExpenseDetailFilter"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponsePaginateExpenseDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/socialevent/deleteEvent/{id}": {
      "delete": {
        "tags": [
          "event-controller"
        ],
        "operationId": "deleteEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          }
        ]
      }
    },
    "/api/common/document/{id}/delete": {
      "delete": {
        "tags": [
          "common-controller"
        ],
        "summary": "Delete a document",
        "description": "Authorities : hasAuthority('SCOPE_delete:document')",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "nabarun_auth": []
          },
          {
            "nabarun_auth_apikey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserAddress": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "addressType": {
            "type": "string",
            "enum": [
              "PRESENT",
              "PERMANENT"
            ]
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          },
          "hometown": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "UserDetail": {
        "type": "object",
        "properties": {
          "presentAndPermanentAddressSame": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string"
          },
          "about": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          },
          "pictureBase64": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          },
          "roleString": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "primaryNumber": {
            "type": "string"
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhoneNumber"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAddress"
            }
          },
          "socialMediaLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSocialMedia"
            }
          },
          "memberSince": {
            "type": "string",
            "format": "date-time"
          },
          "activeContributor": {
            "type": "string"
          },
          "publicProfile": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED",
              "BLOCKED"
            ]
          },
          "loginMethod": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PASSWORD",
                "EMAIL",
                "SMS"
              ]
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "UserPhoneNumber": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "phoneType": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "ALTERNATIVE"
            ]
          },
          "phoneCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          }
        }
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "roleCode": {
            "type": "string",
            "enum": [
              "MEMBER",
              "CASHIER",
              "ASSISTANT_CASHIER",
              "TREASURER",
              "GROUP_COORDINATOR",
              "ASST_GROUP_COORDINATOR",
              "SECRETARY",
              "ASST_SECRETARY",
              "COMMUNITY_MANAGER",
              "ASST_COMMUNITY_MANAGER",
              "PRESIDENT",
              "VICE_PRESIDENT",
              "TECHNICAL_SPECIALIST"
            ]
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserSocialMedia": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "mediaType": {
            "type": "string",
            "enum": [
              "FACEBOOK",
              "INSTAGRAM",
              "WHATSAPP",
              "TWITTER",
              "LINKEDIN"
            ]
          },
          "mediaName": {
            "type": "string"
          },
          "mediaIcon": {
            "type": "string"
          },
          "mediaLink": {
            "type": "string"
          }
        }
      },
      "SuccessResponseUserDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/UserDetail"
          }
        }
      },
      "SuccessResponseVoid": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "object"
          }
        }
      },
      "EventDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "eventTitle": {
            "type": "string"
          },
          "eventDescription": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventLocation": {
            "type": "string"
          },
          "coverPicture": {
            "type": "string"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "INTERNAL"
            ]
          },
          "isDraft": {
            "type": "boolean"
          },
          "eventBudget": {
            "type": "number",
            "format": "double"
          },
          "totalExpenditure": {
            "type": "number",
            "format": "double"
          },
          "creatorName": {
            "type": "string"
          }
        }
      },
      "SuccessResponseEventDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/EventDetail"
          }
        }
      },
      "AdditionalField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "enum": [
              "firstName",
              "lastName",
              "email",
              "dialCode",
              "mobileNumber",
              "hometown",
              "reasonForJoining",
              "howDoUKnowAboutNabarun",
              "password",
              "name",
              "amount",
              "paymentMethod",
              "paidToAccount",
              "decision",
              "remarks",
              "confirmation",
              "reasonForLeaving",
              "startDate",
              "endDate",
              "rejoinDecision",
              "suggession",
              "notifications",
              "info"
            ]
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mandatory": {
            "type": "boolean"
          },
          "valueType": {
            "type": "string"
          },
          "updateField": {
            "type": "boolean"
          }
        }
      },
      "RequestDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/RequestType"
          },
          "status": {
            "type": "string",
            "enum": [
              "AWAITING_L1_APPROVAL",
              "AWAITING_L2_APPROVAL",
              "AWAITING_L2_APPROVAL_MM",
              "APPROVED_ONBOARDING",
              "APPROVED_EXIT",
              "REJECTED",
              "CANCELLED",
              "PAYMENT_COLLECTION_PENDING",
              "PAYMENT_CONFIRMATION_PENDING",
              "PAYMENT_COLLECTED",
              "NO_PAYMENT",
              "AWAITING_APPROVAL_MM",
              "APPROVED_DONATION_PAUSE",
              "COMPLETED",
              "AWAITING_USER_RESPONSE"
            ]
          },
          "description": {
            "type": "string"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedOn": {
            "type": "string",
            "format": "date-time"
          },
          "requester": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "delegated": {
            "type": "boolean"
          },
          "delegatedRequester": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "additionalFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            }
          },
          "remarks": {
            "type": "string"
          }
        }
      },
      "RequestType": {
        "type": "string",
        "enum": [
          "JOIN_REQUEST",
          "JOIN_REQUEST_USER",
          "CHECK_PAYMENT_GUEST",
          "CHECK_PAYMENT",
          "COLLECT_CASH_PAYMENT",
          "TERMINATION_REQUEST",
          "DONATION_PAUSE_REQUEST",
          "PROFILE_UPDATE_REQUEST"
        ]
      },
      "SuccessResponseRequestDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/RequestDetail"
          }
        }
      },
      "MeetingDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "extMeetingId": {
            "type": "string"
          },
          "meetingSummary": {
            "type": "string"
          },
          "meetingDescription": {
            "type": "string"
          },
          "meetingLocation": {
            "type": "string"
          },
          "meetingDate": {
            "type": "string",
            "format": "date-time"
          },
          "meetingStartTime": {
            "type": "string"
          },
          "meetingEndTime": {
            "type": "string"
          },
          "meetingRefId": {
            "type": "string"
          },
          "meetingType": {
            "type": "string",
            "enum": [
              "OFFLINE",
              "ONLINE_VIDEO",
              "ONLINE_AUDIO"
            ]
          },
          "meetingStatus": {
            "type": "string",
            "enum": [
              "CREATED_L",
              "CREATED_G",
              "FAILED_L",
              "FAILED_G",
              "UPDATED_L",
              "UPDATED_G"
            ]
          },
          "meetingAttendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDetail"
            }
          },
          "meetingRemarks": {
            "type": "string"
          },
          "meetingRefType": {
            "type": "string",
            "enum": [
              "NOTICE",
              "EVENT"
            ]
          },
          "extAudioConferenceLink": {
            "type": "string"
          },
          "extVideoConferenceLink": {
            "type": "string"
          },
          "extHtmlLink": {
            "type": "string"
          },
          "creatorEmail": {
            "type": "string"
          },
          "extConferenceStatus": {
            "type": "string"
          }
        }
      },
      "NoticeDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "creatorRoleCode": {
            "type": "string"
          },
          "noticeDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          },
          "noticeStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "EXPIRED",
              "DRAFT"
            ]
          },
          "hasMeeting": {
            "type": "boolean"
          },
          "meeting": {
            "$ref": "#/components/schemas/MeetingDetail"
          }
        }
      },
      "SuccessResponseNoticeDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/NoticeDetail"
          }
        }
      },
      "AccountDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountHolderName": {
            "type": "string"
          },
          "currentBalance": {
            "type": "number",
            "format": "double"
          },
          "accountHolder": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "accountStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "BLOCKED"
            ]
          },
          "activatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "PRINCIPAL",
              "GENERAL",
              "DONATION",
              "PUBLIC_DONATION"
            ]
          },
          "bankDetail": {
            "$ref": "#/components/schemas/BankDetail"
          },
          "upiDetail": {
            "$ref": "#/components/schemas/UPIDetail"
          }
        }
      },
      "BankDetail": {
        "type": "object",
        "properties": {
          "bankAccountHolderName": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "bankBranch": {
            "type": "string"
          },
          "bankAccountNumber": {
            "type": "string"
          },
          "bankAccountType": {
            "type": "string"
          },
          "IFSCNumber": {
            "type": "string"
          }
        }
      },
      "DonationDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isGuest": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "raisedOn": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/DonationType"
          },
          "status": {
            "$ref": "#/components/schemas/DonationStatus"
          },
          "paidOn": {
            "type": "string",
            "format": "date-time"
          },
          "confirmedBy": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "confirmedOn": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paidToAccount": {
            "$ref": "#/components/schemas/AccountDetail"
          },
          "donorDetails": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "forEvent": {
            "$ref": "#/components/schemas/EventDetail"
          },
          "paidUsingUPI": {
            "type": "string",
            "enum": [
              "GPAY",
              "PAYTM",
              "PHONEPE",
              "BHARATPAY",
              "UPI_OTH"
            ]
          },
          "isPaymentNotified": {
            "type": "boolean"
          },
          "transactionRef": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "cancelletionReason": {
            "type": "string"
          },
          "laterPaymentReason": {
            "type": "string"
          },
          "paymentFailureDetail": {
            "type": "string"
          },
          "additionalFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            }
          }
        }
      },
      "DonationStatus": {
        "type": "string",
        "enum": [
          "RAISED",
          "PAID",
          "PENDING",
          "PAYMENT_FAILED",
          "PAY_LATER",
          "CANCELLED",
          "UPDATE_MISTAKE"
        ]
      },
      "DonationType": {
        "type": "string",
        "enum": [
          "REGULAR",
          "ONETIME"
        ]
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "CASH",
          "NETBANKING",
          "UPI"
        ]
      },
      "UPIDetail": {
        "type": "object",
        "properties": {
          "payeeName": {
            "type": "string"
          },
          "upiId": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "qrData": {
            "type": "string"
          }
        }
      },
      "SuccessResponseDonationDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/DonationDetail"
          }
        }
      },
      "ServiceDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "DONATION_REMINDER_EMAIL",
              "TASK_REMINDER_EMAIL",
              "CREATE_DONATION",
              "UPDATE_DONATION",
              "SYNC_USERS",
              "SYNC_SYSTEMS"
            ]
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SuccessResponseString": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "string"
          }
        }
      },
      "DocumentDetailUpload": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "base64Content": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          }
        }
      },
      "ApiKeyDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apiKey": {
            "type": "string"
          },
          "expireable": {
            "type": "boolean"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SuccessResponseApiKeyDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/ApiKeyDetail"
          }
        }
      },
      "TransactionDetail": {
        "type": "object",
        "properties": {
          "txnId": {
            "type": "string"
          },
          "txnType": {
            "type": "string",
            "enum": [
              "IN",
              "OUT",
              "TRANSFER"
            ]
          },
          "txnStatus": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "REVERT"
            ]
          },
          "txnDate": {
            "type": "string",
            "format": "date-time"
          },
          "txnAmount": {
            "type": "number",
            "format": "double"
          },
          "accBalance": {
            "type": "number",
            "format": "double"
          },
          "txnParticulars": {
            "type": "string"
          },
          "txnDescription": {
            "type": "string"
          },
          "txnRefId": {
            "type": "string"
          },
          "txnRefType": {
            "type": "string",
            "enum": [
              "DONATION",
              "NONE",
              "EVENT1",
              "EXPENSE"
            ]
          },
          "transferFrom": {
            "$ref": "#/components/schemas/AccountDetail"
          },
          "transferTo": {
            "$ref": "#/components/schemas/AccountDetail"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "SuccessResponseTransactionDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/TransactionDetail"
          }
        }
      },
      "ExpenseDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "expenseDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "finalizedBy": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "finalized": {
            "type": "boolean"
          },
          "expenseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseItemDetail"
            }
          },
          "finalAmount": {
            "type": "number",
            "format": "double"
          },
          "expenseRefType": {
            "type": "string",
            "enum": [
              "EVENT",
              "OTHER"
            ]
          },
          "expenseRefId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUBMITTED",
              "PAID",
              "CLOSED"
            ]
          },
          "txnNumber": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/AccountDetail"
          }
        }
      },
      "ExpenseItemDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "expenseDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "expenseAccount": {
            "$ref": "#/components/schemas/AccountDetail"
          },
          "remove": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUBMITTED",
              "PAID",
              "CLOSED"
            ]
          }
        }
      },
      "SuccessResponseExpenseDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/ExpenseDetail"
          }
        }
      },
      "SuccessResponseAccountDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/AccountDetail"
          }
        }
      },
      "WorkDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "workType": {
            "type": "string",
            "enum": [
              "DECISION",
              "NA",
              "CONFIRMATION",
              "USER_INPUT"
            ]
          },
          "workflowStatus": {
            "type": "string",
            "enum": [
              "AWAITING_L1_APPROVAL",
              "AWAITING_L2_APPROVAL",
              "AWAITING_L2_APPROVAL_MM",
              "APPROVED_ONBOARDING",
              "APPROVED_EXIT",
              "REJECTED",
              "CANCELLED",
              "PAYMENT_COLLECTION_PENDING",
              "PAYMENT_CONFIRMATION_PENDING",
              "PAYMENT_COLLECTED",
              "NO_PAYMENT",
              "AWAITING_APPROVAL_MM",
              "APPROVED_DONATION_PAUSE",
              "COMPLETED",
              "AWAITING_USER_RESPONSE"
            ]
          },
          "pendingWithRoles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MEMBER",
                "CASHIER",
                "ASSISTANT_CASHIER",
                "TREASURER",
                "GROUP_COORDINATOR",
                "ASST_GROUP_COORDINATOR",
                "SECRETARY",
                "ASST_SECRETARY",
                "COMMUNITY_MANAGER",
                "ASST_COMMUNITY_MANAGER",
                "PRESIDENT",
                "VICE_PRESIDENT",
                "TECHNICAL_SPECIALIST"
              ]
            }
          },
          "pendingWith": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDetail"
            }
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "stepCompleted": {
            "type": "boolean"
          },
          "decisionDate": {
            "type": "string",
            "format": "date-time"
          },
          "decisionOwner": {
            "$ref": "#/components/schemas/UserDetail"
          },
          "additionalFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            }
          }
        }
      },
      "SuccessResponseWorkDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/WorkDetail"
          }
        }
      },
      "SuccessResponseExpenseItemDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/ExpenseItemDetail"
          }
        }
      },
      "UserDetailFilter": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "publicFlag": {
            "type": "boolean"
          },
          "status": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED",
                "BLOCKED"
              ]
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MEMBER",
                "CASHIER",
                "ASSISTANT_CASHIER",
                "TREASURER",
                "GROUP_COORDINATOR",
                "ASST_GROUP_COORDINATOR",
                "SECRETARY",
                "ASST_SECRETARY",
                "COMMUNITY_MANAGER",
                "ASST_COMMUNITY_MANAGER",
                "PRESIDENT",
                "VICE_PRESIDENT",
                "TECHNICAL_SPECIALIST"
              ]
            }
          },
          "userByRole": {
            "type": "boolean"
          }
        }
      },
      "PaginateUserDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateUserDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateUserDetail"
          }
        }
      },
      "PaginateEventDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateEventDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateEventDetail"
          }
        }
      },
      "DocumentDetail": {
        "type": "object",
        "properties": {
          "docId": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "documentIndexId": {
            "type": "string"
          },
          "downloadURL": {
            "type": "string"
          },
          "image": {
            "type": "boolean"
          },
          "generatedDoc": {
            "type": "boolean"
          }
        }
      },
      "SuccessResponseListDocumentDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDetail"
            }
          }
        }
      },
      "SuccessResponseListWorkDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkDetail"
            }
          }
        }
      },
      "WorkDetailFilter": {
        "type": "object",
        "properties": {
          "workId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "sourceType": {
            "$ref": "#/components/schemas/RequestType"
          }
        }
      },
      "PaginateWorkDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateWorkDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateWorkDetail"
          }
        }
      },
      "RequestDetailFilter": {
        "type": "object",
        "properties": {
          "isDelegated": {
            "type": "boolean"
          }
        }
      },
      "PaginateRequestDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateRequestDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateRequestDetail"
          }
        }
      },
      "NoticeDetailFilter": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "EXPIRED",
                "DRAFT"
              ]
            }
          }
        }
      },
      "PaginateNoticeDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoticeDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateNoticeDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateNoticeDetail"
          }
        }
      },
      "ChangeDetail": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "from": {
            "type": "object"
          },
          "to": {
            "type": "object"
          },
          "add": {
            "type": "boolean"
          },
          "remove": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "HistoryDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeDetail"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SuccessResponseListHistoryDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoryDetail"
            }
          }
        }
      },
      "DonationSummary": {
        "type": "object",
        "properties": {
          "currentMonthCollection": {
            "type": "string"
          },
          "totalOutstandingAmount": {
            "type": "number",
            "format": "double"
          },
          "hasOutstanding": {
            "type": "boolean"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "double"
          },
          "outstandingMonths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "payableAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayableAccDetail"
            }
          }
        }
      },
      "PayableAccDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "bankDetail": {
            "$ref": "#/components/schemas/BankDetail"
          },
          "upiDetail": {
            "$ref": "#/components/schemas/UPIDetail"
          }
        }
      },
      "SuccessResponseDonationSummary": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/DonationSummary"
          }
        }
      },
      "DonationDetailFilter": {
        "type": "object",
        "properties": {
          "isGuest": {
            "type": "boolean"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "donationId": {
            "type": "string"
          },
          "donationType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationType"
            }
          },
          "donationStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationStatus"
            }
          },
          "donorName": {
            "type": "string"
          },
          "paidToAccountId": {
            "type": "string"
          },
          "donorId": {
            "type": "string"
          }
        }
      },
      "PaginateDonationDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateDonationDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateDonationDetail"
          }
        }
      },
      "PaginateMapStringString": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateMapStringString": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateMapStringString"
          }
        }
      },
      "SuccessResponseDocumentDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/DocumentDetail"
          }
        }
      },
      "SuccessResponseListAdditionalField": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            }
          }
        }
      },
      "RefDataType": {
        "type": "string",
        "enum": [
          "USER",
          "DONATION",
          "PUBLIC",
          "ACCOUNT",
          "WORKFLOW",
          "ADMIN"
        ]
      },
      "KeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "displayValue": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SuccessResponseMapStringListKeyValue": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeyValue"
              }
            }
          }
        }
      },
      "SuccessResponseListApiKeyDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyDetail"
            }
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "TransactionDetailFilter": {
        "type": "object",
        "properties": {
          "txnId": {
            "type": "string"
          },
          "txnType": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "IN",
                "OUT",
                "TRANSFER"
              ]
            }
          },
          "txnStatus": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAILURE",
                "REVERT"
              ]
            }
          },
          "txnRefType": {
            "type": "string",
            "enum": [
              "DONATION",
              "NONE",
              "EVENT1",
              "EXPENSE"
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginateTransactionDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateTransactionDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateTransactionDetail"
          }
        }
      },
      "AccountDetailFilter": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "BLOCKED"
              ]
            }
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PRINCIPAL",
                "GENERAL",
                "DONATION",
                "PUBLIC_DONATION"
              ]
            }
          },
          "accountHolderId": {
            "type": "string"
          },
          "includePaymentDetail": {
            "type": "boolean"
          },
          "includeBalance": {
            "type": "boolean"
          },
          "accountId": {
            "type": "string"
          }
        }
      },
      "PaginateAccountDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateAccountDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateAccountDetail"
          }
        }
      },
      "ExpenseDetailFilter": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginateExpenseDetail": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          },
          "currentSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseDetail"
            }
          },
          "nextPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "prevPageIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuccessResponsePaginateExpenseDetail": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "traceId": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "responsePayload": {
            "$ref": "#/components/schemas/PaginateExpenseDetail"
          }
        }
      }
    },
    "securitySchemes": {
      "nabarun_auth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      },
      "nabarun_auth_apikey": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header",
        "scheme": "apikey"
      }
    }
  }
}